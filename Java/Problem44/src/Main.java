import java.util.ArrayList;
import java.util.List;

/*
@author: mces58

Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
                    1, 5, 12, 22, 35, 51, 70, 92, 117, 145,...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

Answer: 5482660
*/

public class Main {
    public static void main(String[] args) {
        long result = findMinimalPentagonDifference();
        System.out.println("Minimal difference of pentagonal numbers: " + result);
    }

    public static long pentagonNumber(int n) {
        return (long) n * (3 * n - 1) / 2;
    }

    public static boolean isPentagonNumber(long x) {
        if (x <= 0) return false;
        double test = (Math.sqrt(24 * x + 1) + 1) / 6;
        return test == (long) test;
    }

    public static long findMinimalPentagonDifference() {
        List<Long> pentagonNumbers = new ArrayList<>();
        int n = 1;

        while (true) {
            long pn = pentagonNumber(n);
            pentagonNumbers.add(pn);

            for (int j = 0; j < pentagonNumbers.size() - 1; j++) {
                long pj = pentagonNumbers.get(j);
                long pk = pn;

                if (isPentagonNumber(pk - pj) && isPentagonNumber(pk + pj)) {
                    return pk - pj;
                }
            }

            n++;
        }
    }
}
